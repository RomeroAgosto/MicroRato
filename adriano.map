Archive member included because of file (symbol)

/opt/pic32mx/lib/libm.a(w_pow.o)
                              adriano.o (pow)
/opt/pic32mx/lib/libm.a(w_asin32.o)
                              adriano.o (asin)
/opt/pic32mx/lib/libm.a(cos32.o)
                              mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              adriano.o (__subdf3)
/opt/pic32mx/lib/libm.a(w_sqrt.o)
                              adriano.o (sqrt)
/opt/pic32mx/lib/libm.a(fp32.o)
                              mr32.o (__subsf3)
/opt/pic32mx/lib/libm.a(s_lib_ver.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (math_errhandling)
/opt/pic32mx/lib/libm.a(mod32.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (modf)
/opt/pic32mx/lib/libm.a(pow32.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (__mchp_pow)
/opt/pic32mx/lib/libm.a(log32.o)
                              /opt/pic32mx/lib/libm.a(pow32.o) (exlog)
/opt/pic32mx/lib/libm.a(asin32.o)
                              /opt/pic32mx/lib/libm.a(w_asin32.o) (__mchp_asin)
/opt/pic32mx/lib/libm.a(asncon32.o)
                              /opt/pic32mx/lib/libm.a(asin32.o) (_asncon)
/opt/pic32mx/lib/libm.a(sqrt32.o)
                              /opt/pic32mx/lib/libm.a(asin32.o) (exsqrt)
/opt/pic32mx/lib/libm.a(exp32.o)
                              /opt/pic32mx/lib/libm.a(pow32.o) (exexp)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (errno)
/opt/pic32mx/lib/libc.a(exit.o)
                              mr32.o (exit)
/opt/pic32mx/lib/libc.a(isinf.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (isinf)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

t                   0x8               adriano.o
_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
startTimer          0x8               adriano.o
x                   0x8               adriano.o
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               mr32.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
volta               0x4               adriano.o
tick20ms            0x4               mr32.o
tick2s              0x4               mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
timeToEat           0x4               adriano.o
flagTurn            0x1               adriano.o
groundSensor        0x4               adriano.o
tick40ms            0x4               mr32.o
y                   0x8               adriano.o
tick160ms           0x4               mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              mr32.o
tick10ms            0x4               mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x7098       28824  Application's executable code 
.rodata                 0x9d008498           0xb8         184  Read-only constant data 
.data                   0x9d008550          0x39c         924  Data-initialization template 
.sdata                  0x9d0088ec           0x10          16  Small data-initialization template 
      Total kseg0_program_mem used  :      0x74fc       29948  5.8% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x77d8       30680  5.8% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x39c         924  Initialized data 
.sdata                  0xa000039c           0x10          16  Small initialized data 
.sbss                   0xa00003b0           0xf8         248  Small uninitialized data 
.bss                    0xa00004a8          0x2dc         732  Uninitialized data 
.stack                  0xa0000788         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x2780       10112  7.7% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x2780       10112  7.7% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD adriano.o
LOAD mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0x7098
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0xe94 adriano.o
                0x000000009d001b3c                turnWall
                0x000000009d0016a0                corner
                0x000000009d0019dc                getBed
                0x000000009d001510                moveOutTheWay
                0x000000009d001774                turnCorner
                0x000000009d0014d8                checkCollision
                0x000000009d001400                getBacon
                0x000000009d001eb0                goTo
                0x000000009d0020ac                main
                0x000000009d001438                inBed
                0x000000009d001844                rotateRel_basic
 .text          0x000000009d002294     0x1564 mr32.o
                0x000000009d002dac                normalizeAngle
                0x000000009d003160                pid
                0x000000009d002478                average
                0x000000009d003660                isr_enc_left
                0x000000009d002294                setServoPos
                0x000000009d003718                isr_enc_right
                0x000000009d002680                readAnalogSensors
                0x000000009d002be4                getRobotPos
                0x000000009d0024d8                updateBatteryVoltage
                0x000000009d0037e8                __gxx_personality_v0
                0x000000009d003408                isr_t2
                0x000000009d002c4c                led
                0x000000009d002cf8                setSP2
                0x000000009d002ca8                leds
                0x000000009d00257c                sort
                0x000000009d002fa8                wait
                0x000000009d002c20                setRobotPos
                0x000000009d0027b0                initPIC32
                0x000000009d0025c8                median
                0x000000009d002338                calcDistance
                0x000000009d002d80                readEncoders
                0x000000009d002e94                delay
                0x000000009d002d48                setVel2
                0x000000009d002cec                batteryVoltage
                0x000000009d002d34                setPWM2
                0x000000009d00321c                updateLocalization
                0x000000009d002fe8                actuateMotors
                0x000000009d002ee0                readLineSensors
                0x000000009d002d78                closedLoopControl
                0x000000009d002cc8                obstacleSensor
 .text.pow      0x000000009d0037f8      0x1b8 /opt/pic32mx/lib/libm.a(w_pow.o)
                0x000000009d0037f8                pow
 .text.asin     0x000000009d0039b0       0xac /opt/pic32mx/lib/libm.a(w_asin32.o)
                0x000000009d0039b0                asin
 .text          0x000000009d003a5c      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d003a5c                cos
                0x000000009d003a5c                dpcos
 .text          0x000000009d003bfc      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d003bfc                dpsin
                0x000000009d003bfc                sin
 .text          0x000000009d003d94      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d003d94                reduct
 .text          0x000000009d003f48      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d00411c                exadd
                0x000000009d004050                exmul
                0x000000009d003f48                sigmax
                0x000000009d0042b8                exdiv
                0x000000009d004208                exsub
 .text          0x000000009d00451c     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d0055cc                fabs
                0x000000009d005490                __eqdf2
                0x000000009d005490                __gtdf2
                0x000000009d00451c                dpsub
                0x000000009d005124                __floatsidf
                0x000000009d005490                __ltdf2
                0x000000009d005198                ultodp
                0x000000009d004948                dpmul
                0x000000009d00528c                dptofp
                0x000000009d00540c                __fixunsdfsi
                0x000000009d005490                dpcmp
                0x000000009d0051e8                __extendsfdf2
                0x000000009d004524                __adddf3
                0x000000009d00540c                dptoul
                0x000000009d004c70                dpdiv
                0x000000009d005124                litodp
                0x000000009d005384                __fixdfsi
                0x000000009d005490                __ledf2
                0x000000009d0051e8                fptodp
                0x000000009d0055b4                __negdf2
                0x000000009d004524                dpadd
                0x000000009d004c70                __divdf3
                0x000000009d004948                __muldf3
                0x000000009d00528c                __truncdfsf2
                0x000000009d005490                __nedf2
                0x000000009d005384                dptoli
                0x000000009d0055e8                nan
                0x000000009d0055cc                dpfabs
                0x000000009d005490                __gedf2
                0x000000009d0055e8                dpnan
                0x000000009d00451c                __subdf3
 .text.sqrt     0x000000009d005644       0x80 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                0x000000009d005644                sqrt
 .text          0x000000009d0056c4      0x8ec /opt/pic32mx/lib/libm.a(fp32.o)
                0x000000009d005af0                __divsf3
                0x000000009d005d1c                sitofp
                0x000000009d005dc4                __fixsfsi
                0x000000009d005af0                fpdiv
                0x000000009d0056c4                __subsf3
                0x000000009d005dc4                fptoli
                0x000000009d005eb0                __lesf2
                0x000000009d005f44                fabsf
                0x000000009d005eb0                __nesf2
                0x000000009d005d78                uitofp
                0x000000009d005eb0                __gtsf2
                0x000000009d005e3c                fptoui
                0x000000009d005f44                fpfabs
                0x000000009d005d1c                __floatsisf
                0x000000009d005dc4                fptosi
                0x000000009d005f64                fpnan
                0x000000009d005eb0                __eqsf2
                0x000000009d0056cc                fpadd
                0x000000009d005f54                __negsf2
                0x000000009d005eb0                __ltsf2
                0x000000009d0056c4                fpsub
                0x000000009d005eb0                fpcmp
                0x000000009d005938                __mulsf3
                0x000000009d005eb0                __gesf2
                0x000000009d005f64                nanf
                0x000000009d005d1c                litofp
                0x000000009d005938                fpmul
                0x000000009d005e3c                __fixunssfsi
                0x000000009d0056cc                __addsf3
                0x000000009d005e3c                fptoul
                0x000000009d005d78                ultofp
 .text          0x000000009d005fb0      0x5c8 /opt/pic32mx/lib/libm.a(mod32.o)
                0x000000009d0062f4                __mchp_ldexp
                0x000000009d005fb0                dpfmod
                0x000000009d00645c                modf
                0x000000009d005fb0                fmod
                0x000000009d0062f4                dpldexp
                0x000000009d00645c                dpmodf
                0x000000009d006250                dpfrexp
                0x000000009d006250                frexp
 .text          0x000000009d006578      0x520 /opt/pic32mx/lib/libm.a(pow32.o)
                0x000000009d006578                __mchp_pow
                0x000000009d006578                dppow
 .text          0x000000009d006a98      0x5d8 /opt/pic32mx/lib/libm.a(log32.o)
                0x000000009d006d80                dplog
                0x000000009d006edc                dplog10
                0x000000009d006edc                __mchp_log10
                0x000000009d006d80                __mchp_log
                0x000000009d006a98                exlog
 .text          0x000000009d007070      0x298 /opt/pic32mx/lib/libm.a(asin32.o)
                0x000000009d007070                dpasin
                0x000000009d007070                __mchp_asin
 .text          0x000000009d007308      0x5bc /opt/pic32mx/lib/libm.a(sqrt32.o)
                0x000000009d0075a0                __mchp_sqrt
                0x000000009d007308                exsqrt
                0x000000009d0075a0                dpsqrt
 .text          0x000000009d0078c4      0x340 /opt/pic32mx/lib/libm.a(exp32.o)
                0x000000009d0078c4                exexp
                0x000000009d007aa8                dpexp
                0x000000009d007aa8                __mchp_exp
 .text.exit     0x000000009d007c04       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d007c04                exit
 .text.isnan    0x000000009d007c20       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
                0x000000009d007c20                isnan
 .text.isinf    0x000000009d007c50       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
                0x000000009d007c50                isinf
 .text._cleanup
                0x000000009d007c80       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d007c80                _cleanup
 .text._exit    0x000000009d007ce0        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d007ce0                _exit
 .text.fclose   0x000000009d007ce8      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d007ce8                fclose
 .text.fflush   0x000000009d007dfc       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d007dfc                fflush
 .text._bufallo
                0x000000009d007ec0       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d007ec0                _bufallo
 .text._buffree
                0x000000009d007f18       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d007f18                _buffree
 .text.getpagesize
                0x000000009d007f28        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d007f28                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d007f30       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d007f30                _stub_sbd_memlayout
                0x000000009d007f30                _sbd_memlayout
 .text._sbrk_init
                0x000000009d007f5c      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d007f5c                _sbrk_init
 .text._sbrk    0x000000009d0080b4       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0080b4                _sbrk
 .text.sbrk     0x000000009d008170       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d008170                sbrk
 .text.write    0x000000009d0081e4       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d0081e4                write
 .text.remove   0x000000009d00828c        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d00828c                remove
 .text.close    0x000000009d008294        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d008294                close
 .text          0x000000009d00829c       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d00829c                memset
 .text._mon_putc
                0x000000009d008344       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d008344                _mon_putc
 .text          0x000000009d0083e8       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d008458                printStr
                0x000000009d008438                printInt
                0x000000009d008418                readInt
                0x000000009d008490                resetCoreTimer
                0x000000009d008408                putChar
                0x000000009d008468                readStr
                0x000000009d008478                exxt
                0x000000009d008448                printInt10
                0x000000009d0083e8                inkey
                0x000000009d0083f8                getChar
                0x000000009d008428                readInt10
                0x000000009d008488                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d008498                _text_end = .

.rodata         0x000000009d008498       0xb8
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst8   0x000000009d008498       0x50 adriano.o
                                         0x68 (size before relaxing)
 .rodata        0x000000009d0084e8       0x10 mr32.o
                0x000000009d0084ec                KI_num
                0x000000009d0084f4                KP_num
                0x000000009d0084e8                KI_den
                0x000000009d0084f0                KP_den
 .rodata.cst8   0x000000009d0084f8       0x38 mr32.o
                                         0x40 (size before relaxing)
 .rodata.cst8   0x000000009d008530        0x8 /opt/pic32mx/lib/libm.a(w_pow.o)
 .rodata.cst8   0x000000009d008538        0x0 /opt/pic32mx/lib/libm.a(w_asin32.o)
                                          0x8 (size before relaxing)
 .rodata        0x000000009d008538       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d008550                . = ALIGN (0x4)
 *fill*         0x000000009d00854d        0x3 00

.sdata2         0x000000009d008550        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d008550                . = ALIGN (0x4)

.sbss2          0x000000009d008550        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d008550                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x39c load address 0x000000009d008550
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x98 mr32.o
 .data          0x00000000a0000098       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000098                sincon
                0x00000000a00000d0                coscon
 .data.math_errhandling_flag
                0x00000000a0000108        0x4 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
                0x00000000a0000108                math_errhandling
 .data          0x00000000a000010c       0xe8 /opt/pic32mx/lib/libm.a(log32.o)
 .data          0x00000000a00001f4       0x68 /opt/pic32mx/lib/libm.a(asncon32.o)
                0x00000000a00001f4                _asncon
 .data          0x00000000a000025c       0xa0 /opt/pic32mx/lib/libm.a(exp32.o)
 .data          0x00000000a00002fc       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00002fc                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d008550                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a0008390                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a000039c       0x10 load address 0x000000009d0088ec
                0x00000000a000039c                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a000039c        0x8 mr32.o
                0x00000000a000039c                SERVO_WIDTH_MAX
                0x00000000a00003a0                SERVO_WIDTH_MIN
 .sdata         0x00000000a00003a4        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00003a4                _Files
 .sdata         0x00000000a00003a8        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a00003a8                __C32_UART
                0x00000000a00003ac                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a00003ac                . = ALIGN (0x4)
                0x00000000a00003ac                _data_end = .
                0x00000000a00003ac                _bss_begin = .

.sbss           0x00000000a00003b0       0xf8
                0x00000000a00003b0                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a00003b0        0x8 adriano.o
                0x00000000a00003b4                cornerFlag
                0x00000000a00003b0                baconRotate
 .sbss          0x00000000a00003b8       0x88 mr32.o
                0x00000000a00003b8                cntT2Ticks
 .sbss          0x00000000a0000440        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a0000444        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a0000448                _minbrk
                0x00000000a0000444                _maxbrk
 *(.scommon)
 .scommon       0x00000000a0000450       0x30 adriano.o
                0x00000000a0000450                t
                0x00000000a0000458                startTimer
                0x00000000a0000460                x
                0x00000000a0000468                volta
                0x00000000a000046c                timeToEat
                0x00000000a0000470                flagTurn
                0x00000000a0000474                groundSensor
                0x00000000a0000478                y
 .scommon       0x00000000a0000480       0x18 mr32.o
                0x00000000a0000480                tick80ms
                0x00000000a0000484                tick20ms
                0x00000000a0000488                tick2s
                0x00000000a000048c                tick40ms
                0x00000000a0000490                tick160ms
                0x00000000a0000494                tick10ms
 .scommon       0x00000000a0000498        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a0000498                errno
 .scommon       0x00000000a000049c        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a000049c                _atexitptr
 .scommon       0x00000000a00004a0        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00004a0                _outdone
 *fill*         0x00000000a00004a1        0x3 00
 .scommon       0x00000000a00004a4        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a00004a4                _tfilesptr
                0x00000000a00004a8                _sbss_end = .

.bss            0x00000000a00004a8      0x2dc
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a00004a8      0x26c mr32.o
 .bss           0x00000000a0000714       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a000072c       0x18 mr32.o
                0x00000000a000072c                analogSensors
 COMMON         0x00000000a0000744       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000744                _sibuf
                0x00000000a0000764                _sobuf
                0x00000000a0000784                . = ALIGN (0x4)
                0x00000000a0000784                . = ALIGN (0x4)
                0x00000000a0000784                _end = .
                0x00000000a0000784                _bss_end = .

.persist        0x00000000a0000784        0x0
 *(.persist)
                0x00000000a0000784                . = ALIGN (0x4)

.heap           0x00000000a0000784        0x0
                0x00000000a0000784                _heap = .
                0x00000000a0000784                . = (. + _min_heap_size)

.stack          0x00000000a0000788     0x2000
                0x00000000a0000788                _splim = .
                0x00000000a0000788                _SPLIM = .
                0x00000000a0002788                . = (. + _min_stack_size)
 *fill*         0x00000000a0000788     0x2000 00

.ramfunc        0x00000000a0002800        0x0 load address 0x000000009d0088fc
                0x00000000a0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0002800                . = ALIGN (0x4)
                0x00000000a0002800                _ramfunc_end = .
                0x000000009d0088fc                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x840
 *(.pdr)
 .pdr           0x0000000000000000      0x160 adriano.o
 .pdr           0x0000000000000160      0x420 mr32.o
 .pdr           0x0000000000000580       0x20 /opt/pic32mx/lib/libm.a(w_pow.o)
 .pdr           0x00000000000005a0       0x20 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .pdr           0x00000000000005c0       0x20 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .pdr           0x00000000000005e0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x0000000000000600       0x40 /opt/pic32mx/lib/libc.a(isinf.o)
 .pdr           0x0000000000000640       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000000660       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x0000000000000680       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x00000000000006a0       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x00000000000006c0       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x0000000000000700       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x00000000000007a0       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x00000000000007c0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x00000000000007e0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x0000000000000800       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x0000000000000820       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 adriano.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x73f
 *(.comment)
 .comment       0x0000000000000000       0x4d adriano.o
 .comment       0x000000000000004d       0x4d mr32.o
 .comment       0x000000000000009a       0x4d /opt/pic32mx/lib/libm.a(w_pow.o)
 .comment       0x00000000000000e7       0x4d /opt/pic32mx/lib/libm.a(w_asin32.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(isinf.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x000000000000039c       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x00000000000003e9       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x0000000000000436       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x0000000000000483       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x00000000000004d0       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x0000000000000568       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x00000000000005b5       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x0000000000000602       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x000000000000064f       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x00000000000006a5       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x00000000000006f2       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x288
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x00000000000000a0       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_aranges
                0x00000000000000d0       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x00000000000000f8       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x0000000000000120       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x0000000000000148       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x0000000000000170       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x00000000000001a0       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x00000000000001e8       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x0000000000000210       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x0000000000000238       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x0000000000000260       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x2d1
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1a /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_pubnames
                0x000000000000001a       0x1b /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_pubnames
                0x0000000000000035       0x1b /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_pubnames
                0x0000000000000050       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x000000000000006c       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x0000000000000087       0x26 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_pubnames
                0x00000000000000ad       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x00000000000000db       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x00000000000000f7       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x0000000000000140       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x000000000000015d       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000000000017a       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x00000000000001a6       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x00000000000001c7       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x000000000000023b       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x0000000000000257       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x0000000000000274       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x0000000000000290       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x00000000000002b0       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xf98
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x30 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_info    0x0000000000000030       0x30 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_info    0x0000000000000060       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_info    0x0000000000000090       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x00000000000000cf       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x0000000000000139      0x148 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_info    0x0000000000000281      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x00000000000003c0       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x000000000000040a      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x000000000000055a      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x00000000000006bc       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x00000000000007ad      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x00000000000008f2      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x0000000000000a19      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000c9b       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000d17       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000dc0       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000e5e       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000f59       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x992
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x23 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_abbrev  0x0000000000000023       0x23 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_abbrev  0x0000000000000046       0x23 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_abbrev  0x0000000000000069        0x1 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .debug_abbrev  0x000000000000006a       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x000000000000009a       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x00000000000000fa       0xc7 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_abbrev  0x00000000000001c1       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x000000000000027e       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x00000000000002bf       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x0000000000000340       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x000000000000040c       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x000000000000048c      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x0000000000000595       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x0000000000000625      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x0000000000000778       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x00000000000007eb       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x000000000000086a       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000008d9       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000962       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1c3f
 *(.debug_line)
 .debug_line    0x0000000000000000       0x96 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_line    0x0000000000000096       0x92 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_line    0x0000000000000128       0x90 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_line    0x00000000000001b8      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x0000000000000334      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x00000000000004d1      0x287 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_line    0x0000000000000758      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x0000000000000911       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x00000000000009af      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000000000000b45      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000d31      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000000000000f15      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x000000000000116d      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000001305      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x00000000000016c8       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000178a      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x0000000000001934      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x0000000000001add       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001bb0       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x308
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x44 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_frame   0x0000000000000044       0x34 /opt/pic32mx/lib/libm.a(w_asin32.o)
 .debug_frame   0x0000000000000078       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_frame   0x00000000000000a8       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x00000000000000d4       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_frame   0x0000000000000104       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x0000000000000134       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x0000000000000154       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x0000000000000184       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x00000000000001b0       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x00000000000001e8       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x0000000000000274       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x00000000000002a8       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x00000000000002c8       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x00000000000002e8       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0xbab
 *(.debug_str)
 .debug_str     0x0000000000000000       0xbd /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_str     0x00000000000000bd       0x77 /opt/pic32mx/lib/libm.a(w_asin32.o)
                                         0xbe (size before relaxing)
 .debug_str     0x0000000000000134       0x75 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                                         0xbc (size before relaxing)
 .debug_str     0x00000000000001a9       0x72 /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x000000000000021b       0x74 /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x000000000000028f       0xe0 /opt/pic32mx/lib/libc.a(isinf.o)
                                        0x160 (size before relaxing)
 .debug_str     0x000000000000036f       0xa9 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x0000000000000418       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000048c       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x0000000000000515       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x00000000000005a2       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x0000000000000616       0xb6 /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x00000000000006cc       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x0000000000000739      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000083a       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000008bc       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x0000000000000999       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x0000000000000a5b       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000b3c       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x15fa9
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x0000000000000dbb      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000001971     0x1774 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_macinfo
                0x00000000000030e5     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x0000000000004f2c      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x000000000000585b     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x00000000000076a9     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000009513     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x000000000000b36c     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000d721     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000f568     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x0000000000010701      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x0000000000011030     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000012e77     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x0000000000014cbe      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x000000000001567a      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(adriano.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d0088fc        0x0

.rel.dyn        0x000000009d0088fc        0x0

.debug_ranges   0x000000009d0088fc       0x18
 .debug_ranges  0x000000009d0088fc       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
